{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\twitter-feeds\\\\client\\\\src\\\\signup\\\\signup.js\";\nimport React from 'react';\nimport TwitterLogin from 'react-twitter-auth/lib/react-twitter-auth-component.js';\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport VueAxios from 'vue-axios';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport { createBrowserHistory } from 'history';\nimport './signup.css';\nexport default class SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = response => {\n      console.log(\"response==============\", response);\n      this.setState({\n        isAuthenticated: false,\n        token: '',\n        user: null\n      });\n      console.log(\"logout=======\", this.state.user);\n    };\n\n    this.onFailure = error => {\n      alert(error);\n    };\n\n    this.twitterResponse = response => {\n      console.log(\"response==============\", response);\n      const token = response.headers.get('x-auth-token');\n      response.json().then(user => {\n        if (token) {\n          this.setState({\n            isAuthenticated: true,\n            user,\n            token\n          });\n          console.log(\"response========>\", this.state.user.email);\n        }\n\n        console.log(\"msg==\", this.state.user);\n        var apiBaseUrl = \"http://localhost:4000/user/login\";\n        var self = this;\n        var payload = {\n          \"email\": this.state.user.email\n        };\n        axios.post(apiBaseUrl, payload).then(function (response) {\n          console.log(\"login========\", response);\n          alert(\"Login successfull\");\n          console.log(\"Login successfull\"); // localStorage.setItem('Login', true);\n          // this.props.history.push(\"../home\");\n        }, function (err) {\n          console.log(err);\n        });\n      });\n    };\n\n    this.state = {\n      isAuthenticated: false,\n      user: null,\n      token: ''\n    };\n  }\n\n  render() {\n    let content = !!this.state.isAuthenticated ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Authenticated\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.user.email), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.logout,\n      className: \"button1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Log out\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(TwitterLogin, {\n      loginUrl: \"http://localhost:4000/api/v1/auth/twitter\",\n      onFailure: this.onFailure,\n      onSuccess: this.twitterResponse,\n      requestTokenUrl: \"http://localhost:4000/api/v1/auth/twitter/reverse\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"signup_bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, content));\n  }\n\n}","map":{"version":3,"sources":["C:\\xampp\\htdocs\\twitter-feeds\\client\\src\\signup\\signup.js"],"names":["React","TwitterLogin","BrowserRouter","Router","Link","Route","VueAxios","axios","Redirect","createBrowserHistory","SignUp","Component","constructor","props","logout","response","console","log","setState","isAuthenticated","token","user","state","onFailure","error","alert","twitterResponse","headers","get","json","then","email","apiBaseUrl","self","payload","post","err","render","content"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport TwitterLogin from 'react-twitter-auth/lib/react-twitter-auth-component.js';\r\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\r\nimport VueAxios from 'vue-axios';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport './signup.css';\r\n\r\n\r\nexport default class SignUp extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { isAuthenticated: false, user: null, token:''};\r\n\r\n\t}\r\n\r\n\tlogout = (response) => {\r\n\t\tconsole.log(\"response==============\",response);\r\n\t\tthis.setState({isAuthenticated: false, token: '', user: null})\r\n\t\tconsole.log(\"logout=======\",this.state.user);\r\n\t};\r\n\r\n\tonFailure = (error) => {\r\n\t\talert(error);\r\n\t};\r\n\r\n\ttwitterResponse = (response) => {\r\n\t\tconsole.log(\"response==============\",response);\r\n\t\tconst token = response.headers.get('x-auth-token');\r\n\t\tresponse.json().then(user => {\r\n\t\t\tif (token) {\r\n\t\t\t\tthis.setState({isAuthenticated: true, user, token});\r\n\t\t\t\tconsole.log(\"response========>\",this.state.user.email);\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(\"msg==\",this.state.user);\r\n\t\t\tvar apiBaseUrl = \"http://localhost:4000/user/login\";\r\n\t\t\tvar self = this;\r\n\t\t\tvar payload={\r\n\t\t\t\t\"email\":this.state.user.email,\r\n\t\t\t}\r\n\r\n\t\t\taxios.post(apiBaseUrl, payload)\r\n\t\t\t.then(function (response) {\r\n\t\t\t\tconsole.log(\"login========\",response);\r\n\t\t\t\talert(\"Login successfull\")\r\n\t\t\t\tconsole.log(\"Login successfull\");\r\n\t\t\t\t// localStorage.setItem('Login', true);\r\n              // this.props.history.push(\"../home\");\r\n\r\n\r\n\r\n\r\n          },function(err){\r\n          \tconsole.log(err);\r\n\r\n          })\r\n\t\t});\r\n\r\n\t};\r\n\r\n\trender() {\r\n\t\tlet content = !!this.state.isAuthenticated ?\r\n\t\t(\r\n\t\t\t<div>\r\n\t\t\t<p>Authenticated</p>\r\n\t\t\t<div>\r\n\t\t\t{this.state.user.email}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t<Button onClick={this.logout} className=\"button1\">\r\n\t\t\tLog out\r\n\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t) :\r\n\t\t\t(\r\n\t\t\t<div>\r\n\t\t\t<TwitterLogin loginUrl=\"http://localhost:4000/api/v1/auth/twitter\"\r\n\t\t\tonFailure={this.onFailure} onSuccess={this.twitterResponse}\r\n\t\t\trequestTokenUrl=\"http://localhost:4000/api/v1/auth/twitter/reverse\"/>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\r\n\t\t\treturn (\r\n\t\t\t<div className=\"signup_bg\">\r\n\t\t\t<Router>\r\n\t\t\t{content}\r\n\t\t\t</Router>\r\n\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n"]},"metadata":{},"sourceType":"module"}